.. -*-doctest-*-

===============
Toolbar Buttons
===============

Start with a Plone portal with collective.myrecentcontent installed.

    >>> app = layer['app']
    >>> portal = layer['portal']

Login as a user that would see the toolbar.

    >>> from plone.app import testing
    >>> testing.login(app, testing.SITE_OWNER_NAME)

Retrieve the list of buttons from an instance of the Toolbar class
used by the viewlet.

    >>> request = portal.REQUEST
    >>> request['ACTUAL_URL'] = portal.absolute_url()

    >>> from plone.app.toolbar import toolbar
    >>> tb = toolbar.ToolbarViewlet(portal, request)
    >>> buttons = tb.buttons()

The folder contents action is first.

    >>> contents = buttons[0]
    >>> contents['url']
    'http://nohost/plone/folder_contents'

The view action does not open in an overlay as ic controlled by a
special `link_target` for the aciton.

    >>> from Products.CMFCore.utils import getToolByName
    >>> types = getToolByName(portal, 'portal_types')
    >>> for fti in portal.allowedContentTypes():
    ...     actions = fti.listActions()
    ...     if actions:
    ...         assert actions[0].link_target == 'plone.app.toolbar:load'

    >>> view, = [b for b in buttons if b['id'] == 'toolbar-button-view']
    >>> view['link_target']
    'plone.app.toolbar:load'
    >>> view['klass']
    'load'
